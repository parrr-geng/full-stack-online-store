<h2 class="text-xl">CHECKOUT</h2>

<div>
    <h3 class="font-bold">Delivery Address</h3>
    <p>{{user.address}}</p>
</div>

<div>
    <h3 class="font-bold">Payment method</h3>
    <div id="paypal-button-container"></div>
</div>

<div>
    <h3 class="font-bold">Review your items</h3>

    {{#each products}}
    <div>
        <div>
            <img src="{{product.image}}" alt="product image">
        </div>
        <div>
            <h3>{{title}}</h3>
            <h3>{{price}}</h3>
        </div>
    </div>
    {{/each}}

    <h4 id="totalPrice">Total: <span>{{totalPrice}}</span></h4>

</div>
<form action="/confirmmyorder" method="POST">
    <button class="space-x-3 items-center px-3 py-2 bg-green-400 hover:border rounded-full focus:ring focus:ring-black">Buy now</button>
</form>

{{!-- Paypal payment --}}

<script>
    import { loadScript } from "@paypal/paypal-js";
    let paypal;
    try {
        paypal = await loadScript({ "client-id": "test" });
    } catch (error) {
        console.error("failed to load the PayPal JS SDK script", error);
    }

    if (paypal) {
        try {
            await paypal.Buttons().render("#your-container-element");
        } catch (error) {
            console.error("failed to render the PayPal Buttons", error);
        }
    }
    paypal.Buttons({
        style: {
            layout: 'horizontal',
            color: 'silver',
            shape: 'rect',
            label: 'paypal'
        },
        // Order is created on the server and the order id is returned
        createOrder: (data, actions) => {
            return fetch("/api/orders", {
                method: "post",
                // use the "body" param to optionally pass additional order information
                // like product ids or amount
            })
                .then((response) => response.json())
                .then((order) => order.id);
        },
        // Finalize the transaction on the server after payer approval
        onApprove: (data, actions) => {
            return fetch(`/api/orders/${data.orderID}/capture`, {
                method: "post",
            })
                .then((response) => response.json())
                .then((orderData) => {
                    // Successful capture! For dev/demo purposes:
                    console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));
                    const transaction = orderData.purchase_units[0].payments.captures[0];
                    alert(`Transaction ${transaction.status}: ${transaction.id}\n\nSee console for all available details`);
                    // When ready to go live, remove the alert and show a success message within this page. For example:
                    // const element = document.getElementById('paypal-button-container');
                    // element.innerHTML = '<h3>Thank you for your payment!</h3>';
                    // Or go to another URL:  actions.redirect('thank_you.html');
                });
        }

    }).render('#paypal-button-container');
</script>